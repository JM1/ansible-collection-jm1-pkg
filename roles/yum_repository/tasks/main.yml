---
# Copyright (c) 2022 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Change blocks in YUM repository definition
  loop: '{{ yum_repository_config|default([]) }}'
  when: "'blockinfile' in item"
  ansible.builtin.blockinfile: "{{ item['blockinfile'] }}"
  register: yum_repository_config_blockinfile_result

- name: Manage YUM repository with the dnf package manager
  loop: '{{ yum_repository_config|default([]) }}'
  when: "'dnf' in item"
  ansible.builtin.dnf: "{{ item['dnf'] }}"
  register: yum_repository_config_dnf_result

- name: Copy YUM repository definition
  loop: '{{ yum_repository_config|default([]) }}'
  when: "'copy' in item"
  ansible.builtin.copy: "{{ item['copy'] }}" # noqa risky-file-permissions
  register: yum_repository_config_copy_result

- name: Manage YUM repository definition file
  loop: '{{ yum_repository_config|default([]) }}'
  when: "'file' in item"
  ansible.builtin.file: "{{ item['file'] }}"
  register: yum_repository_config_file_result

- name: Tweak INI settings in YUM repository definition
  loop: '{{ yum_repository_config|default([]) }}'
  when: "'ini_file' in item"
  community.general.ini_file: "{{ item['ini_file'] }}" # noqa risky-file-permissions
  register: yum_repository_config_ini_file_result

- name: Change lines in YUM repository definition
  loop: '{{ yum_repository_config|default([]) }}'
  when: "'lineinfile' in item"
  ansible.builtin.lineinfile: "{{ item['lineinfile'] }}"
  register: yum_repository_config_lineinfile_result

- name: Generate YUM repository definition from template
  loop: '{{ yum_repository_config|default([]) }}'
  when: "'template' in item"
  ansible.builtin.template: "{{ item['template'] }}" # noqa risky-file-permissions
  register: yum_repository_config_template_result

- name: Manage YUM repository with the yum package manager
  loop: '{{ yum_repository_config|default([]) }}'
  when: "'yum' in item"
  ansible.builtin.yum: "{{ item['yum'] }}"
  register: yum_repository_config_yum_result

- name: Manage YUM repository
  loop: '{{ yum_repository_config|default([]) }}'
  when: "'yum_repository' in item"
  ansible.builtin.yum_repository: "{{ item['yum_repository'] }}"
  register: yum_repository_config_yum_repository_result

- name: Debug role variables
  ansible.builtin.debug:
    msg:
      yum_repository_config_blockinfile_result: '{{ yum_repository_config_blockinfile_result }}'
      yum_repository_config_dnf_result: '{{ yum_repository_config_dnf_result }}'
      yum_repository_config_copy_result: '{{ yum_repository_config_copy_result }}'
      yum_repository_config_file_result: '{{ yum_repository_config_file_result }}'
      yum_repository_config_ini_file_result: '{{ yum_repository_config_ini_file_result }}'
      yum_repository_config_lineinfile_result: '{{ yum_repository_config_lineinfile_result }}'
      yum_repository_config_template_result: '{{ yum_repository_config_template_result }}'
      yum_repository_config_yum_result: '{{ yum_repository_config_yum_result }}'
      yum_repository_config_yum_repository_result: '{{ yum_repository_config_yum_repository_result }}'
  tags:
    - never
    - debug
